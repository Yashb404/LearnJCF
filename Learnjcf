import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Comparator;
import java.util.ArrayDeque;
import java.util.HashSet;
import java.util.Set;

class LearnStack {
    public static void main(String[] args) {
       
    }
}

class LearnLinkedListQueue {
    public static void main(String[] args) {
        Queue<Integer> queue = new LinkedList<>();

        queue.offer(12);
        queue.offer(23);
        queue.offer(24);
        System.out.println(queue);
        System.out.println(queue.poll());
    }
}

class LearnPriorityQueue {
    public static void main(String[] args) {
        // Queue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());
        Queue<Integer> pq = new PriorityQueue<>();

        pq.offer(12);
        pq.offer(40);
        pq.offer(24);
        pq.offer(36);

        System.out.println(pq);

        pq.poll();
        System.out.println(pq);
    }
}

class LearnArrayDeque {
    public static void main(String[] args) {
        ArrayDeque<Integer> adq = new ArrayDeque<>();

        adq.offer(23);
        adq.offerFirst(12);
        adq.offerLast(46);

        System.out.println(adq);
    }
}

class LearnSet {
    public static void main(String[] args) {
        Set<Integer> set = new HashSet<>();

        set.add(32);
        set.add(2);
        set.add(3);
        set.add(62);

        System.out.println(set);
        set.remove(62);
        set.contains(21);
        set.isEmpty();
    }
}
